#!/usr/bin/env python

from __future__ import print_function
import argparse
import os
import sys

from catkin_pkg.packages import find_packages, verify_equal_package_versions

try:
    from catkin.package_version import bump_version, update_versions
except ImportError:
    # find the import relatively to make it work before installing catkin
    sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'python'))
    from catkin.package_version import bump_version, update_versions

def main():
    parser = argparse.ArgumentParser(description='Show or bump the version number in package.xml files.')
    parser.add_argument('path', nargs='?', default='.', help='The path to a parent folder which contains package.xml files (default: .)')
    parser.add_argument('--bump', choices=('major', 'minor', 'patch'), help='Which part of the version number to bump?')
    args = parser.parse_args()

    try:
        packages = find_packages(args.path)
        version = verify_equal_package_versions(packages.values())
    except Exception as e:
        sys.exit(str(e))

    # only print the version number
    if args.bump is None:
        print(version)

    else:
        # bump the version number
        try:
            new_version = bump_version(version, args.bump)
            update_versions(packages.keys(), new_version)
        except Exception as e:
            sys.exit(str(e))
        print('%s -> %s' % (version, new_version))


if __name__ == '__main__':
    main()
