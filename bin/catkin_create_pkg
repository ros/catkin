#!/usr/bin/env python
from __future__ import print_function
import argparse
import os
import sys
import re

from catkin_pkg.templates import create_package_files, PackageTemplate

"""This script creates the skeletton of a catkin package"""

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Creates a new catkin package')
    parser.add_argument('name',
                        nargs=1,
                        help='The name for the package')
    parser.add_argument('license',
                        nargs=1,
                        help='The license for the package, elg BSD, MIT, GPLv3')
    parser.add_argument('dependencies',
                        nargs='*',
                        help='Package Dependencies')
    parser.add_argument('-V', '--pkg_version',
                        action='store',
                        help='Initial Package version')
    parser.add_argument('-D', '--description',
                        action='store',
                        help='Description')
    parser.add_argument('-l', '--additional_license',
                        action='append',
                        help='Name for License, (e.g. BSD, MIT, GPLv3...)')
    parser.add_argument('-a', '--authors',
                        action='store',
                        help='Authors')
    args = parser.parse_args()

    try:
        package_name = args.name[0]
        licenses = (list(args.license or []))
        licenses.extend(args.additional_license or [])
        package = PackageTemplate(
            name=package_name,
            version=args.pkg_version or '0.0.0',
            description=args.description,
            # build_depends=args.dependencies,
            licenses=licenses,
            authors=args.authors or [],
            urls=[])
        create_package_files(os.path.join(os.getcwd(), package_name), package)
        print('Success')
    except ValueError as vae:
        parser.error(str(vae))
